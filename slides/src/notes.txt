The code will be way simpler to write
- 1 language to master
- the UI code being enforced by the compiler
- less cognitive complexity (no race condition, 1 state that mutates only in 1 place, etc.)
- less weird things going on between the code behind and the UI (e.g. {Binding IsVisible, Converter={StaticResource InvertBooleanConverter}})


MVVM
- OO programming
- Complex mutable models
- declarative static UI
- view in a second language
- complex designer tooling

Xaml
- accidental complexity
    - bindings/ templates
    - code-like constructs (behaviors, converters)
    - designer tools (shitty)
    - CanExecute!  (stateful)

MVU
- Functional programming
- simple declarative models
- declarative dynamic UI
- view in same language DSL
- Simple live coding tooling
    - same language tooling

- unidirectional data flow


# Familiarity
- When you jump into an unknown Xaml project what do you know?
- Not very much.  Does it use Rx? MvvmLite? 